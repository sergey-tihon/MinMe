@implements IViewFor<PublishSlidesViewModel>

<div class="container-fluid">
    <h1>Choose PowerPoint file:</h1>
    <div class="row">
        <div class="col-md-auto">
            <button class="btn btn-info"
                    @onclick="ChooseFile">
                Open File
            </button>
        </div>
        <div class="col">
            <div class="form-group">
                <input id="name" type="text" class="form-control"
                        placeholder="@ViewModel.Placeholder"
                        disabled="@ElectronNET.API.HybridSupport.IsElectronActive"
                        @bind-value="ViewModel.FileName"
                        @bind-value:event="oninput" />
            </div>
        </div>
    </div>
    @if (ViewModel.FileContentInfo is { } fileInfo)
    {
        <div class="row">
            <div class="col-md-auto">
                <button class="btn btn-info"
                        @onclick="Publish">
                    Publish Slides
                </button>
            </div>
            <div class="col">
                <b>File size : @fileInfo.FileSize.ToString("#,##0") bytes</b>
                <ul>
                @foreach (var partInfo in fileInfo.Parts.OrderBy(x=>x.Name))
                {
                    <li>
                        @partInfo.Name contains @partInfo.Size.ToString("#,##0") bytes
                        @if (partInfo.Size > 10_000_000)
                        {
                            <span class="badge badge-danger">Danger</span>
                        }
                        else if (partInfo.Size > 1_000_000)
                        {
                            <span class="badge badge-warning">Warning</span>
                        }
                    </li>
                }
                </ul>
            </div>
        </div>
    }
</div>


@code {
    [Inject]
    public PublishSlidesViewModel ViewModel { get; set; }
    object IViewFor.ViewModel
    {
        get => ViewModel;
        set => ViewModel = (PublishSlidesViewModel)value;
    }

    public Task ChooseFile() => ViewModel.ChooseFile.Execute().ToTask();
    public Task Publish() => ViewModel.PublishSlides.Execute().ToTask();

}
